
> @userappstore/organizations@1.0.1034 test /Users/benlowry/CloudStation/workspaces/dashboard/organizations
> NODE_ENV=testing mocha src --recursive --timeout 10000 --slow 5000



  internal-api/invitation
    Invitation#create()
      ✓ should require organizationid
      ✓ should create an invitation
      ✓ should update the owner's last invitation created date
    Invitation#delete
      ✓ should require an invitationid
      ✓ should require a valid invitationid
      ✓ should delete the invitation
      ✓ should update the owner's last invitation deleted date
    Invitation#list()
      ✓ should require organizationid
      ✓ should return created invitations
    Invitation#load()
      ✓ should require invitationid
      ✓ should return the invitation
    Invitation#loadMany()
      ✓ should require one or more invitationids
      ✓ should load the invitations
    Invitation#accept()
      ✓ should require an organizationid
      ✓ should require an invitation code
      ✓ should require a valid invitation code
      ✓ should reject the owner
      ✓ should reject existing member
      ✓ should mark invitation as accepted
      ✓ should update the owner's last invitation accepted date
    Invitation#setProperty
      ✓ should require an invitationid
      ✓ should require a property
      ✓ should require a value
      ✓ should set the property
    Invitation#getProperty
      ✓ should require an invitationid
      ✓ should require a property
      ✓ should retrieve the property
    Invitation#removeProperty
      ✓ should require an invitationid
      ✓ should require a property
      ✓ should remove the property

  internal-api/membership
    Membership#create()
      ✓ should require an organization
      ✓ should require an accountid
      ✓ should create membership
      ✓ should update the user's last membership created date
    Membership#delete
      ✓ should require a valid membershipid
      ✓ should delete membership (3741ms)
    Membership#setProperty
      ✓ should require a membershipid
      ✓ should require a property
      ✓ should require a value
      ✓ should set the property
    Membership#getProperty
      ✓ should require a membershipid
      ✓ should require a property
      ✓ should retrieve the property
    Membership#removeProperty
      ✓ should require a membershipid
      ✓ should require a property
      ✓ should remove the property

  internal-api/organization
    Organization#create()
      ✓ should require organization name
      ✓ should force organization name length
      ✓ should create an organization
      ✓ should update the user's last organization created date
    Organization#delete
      ✓ should require a valid organizationid
      ✓ should delete organization
    Organization#setProperty
      ✓ should require an organizationid
      ✓ should require a property
      ✓ should require a value
      ✓ should set the property
    Organization#getProperty
      ✓ should require an organizationid
      ✓ should require a property
      ✓ should retrieve the property
    Organization#removeProperty
      ✓ should require an organizationid
      ✓ should require a property
      ✓ should remove the property

  proxy/x-memberships-header
    Memberships#GET
      ✓ should add membership list to header

  proxy/x-organizations-header
    ProxyOrganizations#GET
      ✓ should add organizations list to header

  server/bind-memberships
    BindMemberships#GET
      ✓ should bind membership list to req

  server/bind-organizations
    BindOrganizations#GET
      ✓ should bind organizations list to req

  /account/organizations/accept-invitation
    AcceptInvitation#BEFORE
      ✓ should reject owner
      ✓ should reject existing member
      ✓ should bind organization to req
    AcceptInvitation#GET
      ✓ should present the form
      ✓ should present the organization
    AcceptInvitation#POST
      1) should apply after authorization

  /account/organizations/create-organization
    CreateOrganization#GET
      ✓ should present the form
    CreateOrganization#POST
      2) should reject missing name
      3) should reject short name
      4) should reject long name
      5) should reject invalid fields
      6) should enforce field length
      7) should create organization

  /account/organizations/delete-membership
    DeleteMembership#BEFORE
      ✓ should require own membership (2582ms)
      ✓ should bind organization to req
    DeleteMembership#GET
      ✓ should present the form
      ✓ should present the membership
    DeleteMembership#POST
      8) should delete membership

  /account/organizations/edit-membership
    EditMembership#BEFORE
      ✓ should require own membership
      ✓ should bind membership to req
    EditMembership#GET
      ✓ should present the form
    EditMembership#POST
      9) should reject invalid fields
      10) should enforce field length
      11) should apply after authorization

  /account/organizations/index
    Index#BEFORE
      ✓ should bind memberships to req
      ✓ should bind organizations to req
    Index#GET
      ✓ should have row for each organization
      ✓ should have row for each membership

  /account/organizations/membership
    Membership#BEFORE
      ✓ should reject non-member
      ✓ should bind membership to req
    Membership#GET
      ✓ should have row for membership

  /account/organizations/memberships
    Memberships#BEFORE
      ✓ should bind memberships to req
    Memberships#GET
      ✓ should have row for each membership

  /account/organizations/organization
    Organization#BEFORE
      ✓ should reject non-member
      ✓ should bind organization to req
    Organization#GET
      ✓ should have row for organization

  /account/organizations/owner/create-invitation
    CreateInvitation#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    CreateInvitation#GET
      ✓ should present the form
      ✓ should present the organization
    CreateInvitation#POST
      12) should apply after authorization

  /account/organizations/owner/delete-invitation
    DeleteInvitation#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    DeleteInvitation#GET
      ✓ should present the form
      ✓ should present the invitation
    DeleteInvitation#POST
      13) should delete invitation

  /account/organizations/owner/delete-organization
    DeleteOrganization#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    DeleteOrganization#GET
      ✓ should present the form
      ✓ should present the organization
    DeleteOrganization#POST
      14) should delete organization

  /account/organizations/owner/edit-organization
    EditOrganization#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    EditOrganization#GET
      ✓ should present the form
    EditOrganization#POST
      15) should reject invalid fields
      16) should enforce field length
      17) should apply after authorization

  /account/organizations/owner/invitation
    Invitation#BEFORE
      ✓ should require owner
      ✓ should bind invitation to req
    Invitation#GET
      ✓ should have row for invitation

  /account/organizations/owner/invitations
    Invitations#BEFORE
      ✓ should require owner
      ✓ should bind invitations to req
    Invitations#GET
      ✓ should have row for invitation

  /account/organizations/owner/membership
    Membership#BEFORE
      ✓ should require owner
      ✓ should bind membership to req
    Membership#GET
      ✓ should have row for membership

  /account/organizations/owner/memberships
    Memberships#BEFORE
      ✓ should bind memberships to req
    Memberships#GET
      ✓ should have row for each membership

  /account/organizations/owner/organization
    Organization#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    Organization#GET
      ✓ should have row for organization

  /account/organizations/owner/organizations
    Organizations#BEFORE
      ✓ should bind owned organizations to req
    Organizations#GET
      ✓ should have row for each membership

  /account/organizations/owner/revoke-membership
    RevokeMembership#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
    RevokeMembership#GET
      ✓ should present the form
      ✓ should present the membership
    RevokeMembership#POST
      18) should delete membership

  /account/organizations/owner/transfer-organization
    TransferOrganization#BEFORE
      ✓ should require owner
      ✓ should bind organization to req
      ✓ should bind memberships to req
    TransferOrganization#GET
      ✓ should present the form
      ✓ should present the organization
    TransferOrganization#POST
      19) should apply after authorization

  /administrator/organizations/index
    Index#BEFORE
      ✓ should bind memberships to req (2512ms)
      ✓ should bind organizations to req
    Index#GET
      ✓ should have row for each organization
      ✓ should have row for each membership

  /administrator/organizations/invitation
    Invitation#BEFORE
      ✓ should bind invitation to req
    Invitation#GET
      ✓ should have row for invitation

  /administrator/organizations/invitations
    Invitations#BEFORE
      ✓ should bind invitations to req
    Invitations#GET
      ✓ should have row for invitation

  /administrator/organizations/membership
    Membership#BEFORE
      ✓ should bind membership to req
    Membership#GET
      ✓ should have row for membership

  /administrator/organizations/memberships
    Memberships#BEFORE
      ✓ should bind memberships to req
    Memberships#GET
      ✓ should have row for each membership

  /administrator/organizations/organization
    Organization#BEFORE
      ✓ should bind organization to req
    Organization#GET
      ✓ should have row for organization

  /administrator/organizations/organizations
    Organizations#BEFORE
      ✓ should bind owned organizations to req
      ✓ should not bind member organizations to req
    Organizations#GET
      ✓ should have row for each membership

  /api/administrator/organizations/invitation
    Invitation#GET
      ✓ should return invitation data
      ✓ should redact invitation code

  /api/administrator/organizations/invitations
    Invitations#GET
      ✓ should return invitation list (4269ms)
      ✓ should filter by organizationid (3737ms)

  /api/administrator/organizations/membership
    Membership#GET
      ✓ should return membership data
      ✓ should redact membership code

  /api/administrator/organizations/memberships
    Memberships#GET
      ✓ should return membership list (2753ms)
      ✓ should filter by organizationid

  /api/administrator/organizations/organization
    Organization#GET
      ✓ should return organization data
      ✓ should redact organization code

  /api/administrator/organizations/organizations
    Organizations#GET
      ✓ should return organization list
      ✓ should filter by accountid

  /api/user/organizations/accept-invitation
    AcceptInvitation#POST
      ✓ should enforce code length
      ✓ should reject a used invitation
      ✓ should reject owner
      ✓ should reject existing members
      ✓ should create authorized membership

  /api/user/organizations/account-memberships
    AccountMemberships#GET
      ✓ should reject other account
      ✓ should return membership list (3477ms)

  /api/user/organizations/create-invitation
    CreateInvitation#POST
      ✓ should enforce code length
      ✓ should create authorized invitation

  /api/user/organizations/create-organization
    CreateOrganization#POST
      ✓ should enforce name length
      ✓ should reject invalid fields
      ✓ should create authorized organization

  /api/user/organizations/delete-invitation
    DeleteInvitation#DELETE
      ✓ should require owner
      ✓ should reject accepted invitation
      ✓ should delete invitation with authorization

  /api/user/organizations/delete-membership
    DeleteMembership#DELETE
      ✓ should reject non-owner non-member
      ✓ should delete membership

  /api/user/organizations/delete-organization
    DeleteOrganization#DELETE
      ✓ should require own organization
      ✓ should delete organization

  /api/user/organizations/invitation
    Invitation#GET
      ✓ should reject non-owner
      ✓ should return invitation data
      ✓ should redact invitation code

  /api/user/organizations/invitations
    Invitations#GET
      ✓ should require organization owner
      ✓ should return invitation list

  /api/user/organizations/membership
    Membership#GET
      ✓ should allow organization owner
      ✓ should allow organization member
      ✓ should reject non-owner non-members
      ✓ should return membership data

  /api/user/organizations/memberships
    Memberships#GET
      ✓ should allow organization owner
      ✓ should allow organization member
      ✓ should reject non-owner non-members
      ✓ should return membership list

  /api/user/organizations/organization
    Organization#GET
      ✓ should reject non-owner non-member
      ✓ should return organization data

  /api/user/organizations/organizations
    Organizations#GET
      ✓ should reject other accountid
      ✓ should return organization list

  /api/user/organizations/transfer-organization
    TransferOrganization#PATCH
      ✓ should require own organization
      ✓ should reject same owner
      ✓ should require new owner is member
      ✓ should transfer organization after authorization

  /api/user/organizations/update-membership
    UpdateMembership#PATCH
      ✓ should require own membership
      ✓ should reject invalid fields
      ✓ should enforce field length
      ✓ should apply new values

  /api/user/organizations/update-organization
    ✓ should reject invalid fields
    ✓ should enforce field length
    ✓ should apply new values


  207 passing (5m)
  19 failing

  1) /account/organizations/accept-invitation
       AcceptInvitation#POST
         should apply after authorization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/accept-invitation.test.js:117:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  2) /account/organizations/create-organization
       CreateOrganization#POST
         should reject missing name:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-name' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:37:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  3) /account/organizations/create-organization
       CreateOrganization#POST
         should reject short name:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-name-length' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:54:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  4) /account/organizations/create-organization
       CreateOrganization#POST
         should reject long name:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-name-length' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:72:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  5) /account/organizations/create-organization
       CreateOrganization#POST
         should reject invalid fields:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-field' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:91:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  6) /account/organizations/create-organization
       CreateOrganization#POST
         should enforce field length:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-field-length' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:110:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  7) /account/organizations/create-organization
       CreateOrganization#POST
         should create organization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res.end (src/www/account/organizations/create-organization.test.js:131:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  8) /account/organizations/delete-membership
       DeleteMembership#POST
         should delete membership:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/delete-membership.test.js:97:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  9) /account/organizations/edit-membership
       EditMembership#POST
         should reject invalid fields:
     AssertionError [ERR_ASSERTION]: 'invalid-membership-field' == undefined
      at Object.res.end (src/www/account/organizations/edit-membership.test.js:77:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  10) /account/organizations/edit-membership
       EditMembership#POST
         should enforce field length:
     AssertionError [ERR_ASSERTION]: 'invalid-membership-field-length' == undefined
      at Object.res.end (src/www/account/organizations/edit-membership.test.js:98:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  11) /account/organizations/edit-membership
       EditMembership#POST
         should apply after authorization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res.end (src/www/account/organizations/edit-membership.test.js:124:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  12) /account/organizations/owner/create-invitation
       CreateInvitation#POST
         should apply after authorization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/owner/create-invitation.test.js:94:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  13) /account/organizations/owner/delete-invitation
       DeleteInvitation#POST
         should delete invitation:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/owner/delete-invitation.test.js:92:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  14) /account/organizations/owner/delete-organization
       DeleteOrganization#POST
         should delete organization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/owner/delete-organization.test.js:89:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  15) /account/organizations/owner/edit-organization
       EditOrganization#POST
         should reject invalid fields:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-field' == undefined
      at Object.res.end (src/www/account/organizations/owner/edit-organization.test.js:70:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  16) /account/organizations/owner/edit-organization
       EditOrganization#POST
         should enforce field length:
     AssertionError [ERR_ASSERTION]: 'invalid-organization-field-length' == undefined
      at Object.res.end (src/www/account/organizations/owner/edit-organization.test.js:89:16)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  17) /account/organizations/owner/edit-organization
       EditOrganization#POST
         should apply after authorization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res.end (src/www/account/organizations/owner/edit-organization.test.js:113:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  18) /account/organizations/owner/revoke-membership
       RevokeMembership#POST
         should delete membership:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/owner/revoke-membership.test.js:96:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)

  19) /account/organizations/owner/transfer-organization
       TransferOrganization#POST
         should apply after authorization:
     AssertionError [ERR_ASSERTION]: 'success' == undefined
      at Object.res2.end (src/www/account/organizations/owner/transfer-organization.test.js:113:18)
      at compress (node_modules/@userappstore/dashboard/src/response.js:111:16)
      at Object.end (node_modules/@userappstore/dashboard/src/response.js:64:12)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:169:7)



